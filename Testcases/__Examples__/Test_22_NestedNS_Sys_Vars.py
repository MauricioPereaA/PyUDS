
            # This is and autogenerated test case using PyUDS Test Builder v0.1 #
        
from Testcases.TestClass import TestCase
from inspect import stack as info
from framework.shared_functions import tools
import unittest, time

test = TestCase()
class PyUDS_TestCase(unittest.TestCase):

    #== Positive Flow Diagnostic Session Control Session and Security Tests ==#
    @classmethod
    def setUpClass(self):
        #== Initialize test case ==#
        test.begin(
            test_info=info(),
            writeTestResults=False,
            step_delay=0.005
        )

        tools.popup.info(__name__, 'To perform this test. Make sure that provided System'+\
            ' variables in script are currently available.')
        message = 'This test is not intended to be run. Placeholder values should be created on your enviroment to run if required.'
        tools.popup.warning(title='Warning',
                                description=message)

    @classmethod
    def tearDownClass(self):
        #== End Test Case ==#
        test.end()


    def test_001(self, name='Set nested NS Sys Var'):
        
        print('1.- Attempting to set value: ', 1)
        test.canoe.set_system_variable(
            namespace='ARC_Functions::ARC_Functions_child',
            variable='nested_test',
            status=1
        )

        print('1.- This is the current value: ', test.canoe.set_system_variable(
            namespace='ARC_Functions::ARC_Functions_child',
            variable='nested_test'
        ))

        print('2.- Attempting to set value: ', 0)
        test.canoe.set_system_variable(
            namespace='ARC_Functions::ARC_Functions_child',
            variable='nested_test',
            status=0
        )

        print('2.- This is the current value: ', test.canoe.set_system_variable(
            namespace='ARC_Functions::ARC_Functions_child',
            variable='nested_test'
        ))