
            # This is and autogenerated test case using PyUDS Test Builder v0.1 #
        
from Testcases.TestClass import TestCase
from framework.shared_libs.thread_timesync import cmd_Thread
from framework.shared_functions import tools, device_under_test
from inspect import stack as info
import unittest, time, os

test = TestCase()
class PyUDS_TestCase(unittest.TestCase):

    #== Positive Flow Diagnostic Session Control Session and Security Tests ==#
    @classmethod
    def setUpClass(self):
        #== Initialize test case ==#
        test.begin(
            test_info=info(),
            writeTestResults=False,
            step_delay=0.25
        )

        if device_under_test in ['MSM', 'PTM']:
            self.timesync_message = 'CGM_CAN4_PDU04'
        elif device_under_test in ['ARB', 'SCL']:
            self.timesync_message = 'CGM_CAN1_PDU06'

        self.iterations = 100   # How many times TimeSync will be incremented
        self.dealy_ms = 1000    # Delay time for each iteration

    @classmethod
    def tearDownClass(self):
        #== End Test Case ==#
        test.end()

    def test_001(self, name='Clear DTCs after 5 seconds'):
        test.preconditions(
            step_info=info()
        )
        cmd = cmd_Thread( # TimeSync signal incrementation will run in 2nd Thread while test is performed
            'py "{0}\\framework\\shared_libs\\timesync.py" -d {1} -i {2} -m {3}'.format(
                os.getcwd(),            # 0 - PyUDS - Current working directory
                self.timesync_message,  # 1 - Message where TimeSync is transmitted
                self.dealy_ms,          # 2 - Delay time between each iteration
                self.iterations         # 3 - How many times TimeSync will be incremented
                ))        
        cmd.start()
        tools.timer.input('Press enter to continue...')
        time.sleep(2)
        for _ in range(10):
            test.step(
                step_title=name,

                custom='22 F1 29',
                expected={
                    'response' : 'Positive'
                }
            )
        cmd.join()