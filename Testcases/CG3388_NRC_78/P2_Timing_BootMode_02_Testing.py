from framework.shared_functions import device_under_test
from Testcases.TestClass import TestCase
from inspect import stack as info
import time
import unittest

test = TestCase()

class PyUDS_TestCase(unittest.TestCase):

    #== PyUDS - Autogenerated Test Case Template ==#
    @classmethod
    def setUpClass(self):
        #== Initialize test case ==#
        test.begin(
            test_info=info(),
            writeTestResults=True,
            excel_tab='NRC 78 & P2 Timing'
        )
        self.P2sever =[0,0x64]
        self.P2_sever =[0,0x1388]
        
    @classmethod
    def tearDownClass(self):
        #== End Test Case ==#
        test.end()
        
    def test_023(self, name='Transition Server to the programmingSession'):
        # Begin -- Boot Mode preconditions
        test.preconditions(current_step='test_bootMode_Precondition')
        test.step(
            step_title='bootMode Precondition',
            extended_session_control=True,
            start_tester_present= True,
            dtc_settings=False,
            communication_control=False,
            request_seed='01',
            send_key='01'
        )
        # End -- Boot Mode preconditions

#         test.preconditions(
#             step_info=info()
#         )
#         test.step(
#             step_title=name,
#             custom='0E F4 0C A8 00 00 00 02 10 02',    # Send a valid physical Logical Address request   Need to add 
# 
#             expected={
#                 'response'   : 'Positive',
#                 'P2sever':  self.P2sever,
#                 'P2*sever':  self.P2_sever
#             }
#         )
  