
            # This is and autogenerated test case using PyUDS Test Builder v0.3 #

'''  CG2020
Modified by: Mauricio Perea        Date: 30-Sep-20

'''            
from framework.shared_libs.transport_layer import TransportLayer
from framework.shared_functions import tools, LogsPath
from Testcases.TestClass import TestCase
from inspect import stack as info
import unittest, time

test = TestCase()
class PyUDS_TestCase(unittest.TestCase):

    #== PyUDS - Autogenerated Test Case Template ==#
    @classmethod
    def setUpClass(self):
        #== Initialize test case ==#
        self.TransportLayer = TransportLayer(LogsPath+'\\TraceLog.asc')
        self.test_passed = True
    @classmethod
    def tearDownClass(self):
        #== End Test Case ==#
        test.end()

    def test_001(self, name='Transport Layer 17'):
        for _ in range(10):
            test.begin(
                test_info=info(),
                writeTestResults=True,
                excel_tab='Transport Layer'
            )
            # *CHECKED* - Check-box
            test.canoe.set_envVariable(TransportLayer17=1)

            # *PUSH* - Run selected test cases
            test.canoe.set_envVariable(RunTransportLayerTC=1)
            time.sleep(0.75)
            test.canoe.set_envVariable(RunTransportLayerTC=0)
            test.canoe.set_envVariable(TransportLayer17=0)
            ## Wait for Transport Layer Test Case to be finished
            print('Please wait until TC is completed...')
            time.sleep(8)
            test.canoe.stop()
            if self.TransportLayer.test_case_17_interruption_correctly():
                test.compare(self.TransportLayer.test_case_17(), True, 
                        step='test_001')  
                self.test_passed = True #add

                break

        # If condition only to fill report test FAILED
        if self.test_passed == False:
            test.compare(True, False, step='test_001') 
        