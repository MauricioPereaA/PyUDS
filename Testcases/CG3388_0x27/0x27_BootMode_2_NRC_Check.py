
            # This is and autogenerated test case using PyUDS Test Builder v0.2 #
#Modified by: Mauricio Perea        Date: 30-Sep-20
        
from Testcases.TestClass import TestCase
from inspect import stack as info
import unittest, time

test = TestCase()
class PyUDS_TestCase(unittest.TestCase):

    #== PyUDS - Autogenerated Test Case Template ==#
    @classmethod
    def setUpClass(self):
        #== Initialize test case ==#
        test.begin(
            test_info=info(),
            writeTestResults=True,
            excel_tab='0x27'
        )

    @classmethod
    def tearDownClass(self):
        #== End Test Case ==#
        test.end()


    def test_002(self, name='ServiceNotSupported - 0x11'):
        pass

    def test_003(self, name='incorrectMessageLengthOrInvalidFormat - 0x13 -- 27'):
        # Begin -- Boot Mode preconditions
        test.preconditions(current_step='test_bootMode_Precondition')
        test.step(
            step_title='bootMode Precondition',
            extended_session_control=True,
            dtc_settings=False,
            communication_control=False,
            request_seed='01',
            send_key='01'
        )
        test.step(
            step_title=name,
            custom='10 02'
        )
        # End -- Boot Mode preconditions
        test.preconditions(
            step_info=info()            
        )
        test.step(
            step_title=name,
            custom='27',
            expected={
                'response': 'Negative',
                'data': '13'
            }
        )

    def test_004(self, name='incorrectMessageLengthOrInvalidFormat - 0x13 -- 27 01 XX'):
        test.preconditions(
            step_info=info()            
        )
        test.step(
            step_title=name,
            custom='27 01 FF',
            expected={
                'response': 'Negative',
                'data': '13'
            }
        )

    def test_005(self, name='incorrectMessageLengthOrInvalidFormat - 0x13 -- 27 03 XX'):
        test.preconditions(
            step_info=info()            
        )
        test.step(
            step_title=name,
            custom='27 03 FF',
            expected={
                'response': 'Negative',
                'data': '13'
            }
        )

    def test_006(self, name='incorrectMessageLengthOrInvalidFormat - 0x13 -- 27 05 XX'):
        test.preconditions(
            step_info=info()            
        )
        test.step(
            step_title=name,
            custom='27 05 FF',
            expected={
                'response': 'Negative',
                'data': '13'
            }
        )

    def test_007(self, name='subFunctionNotSupported - 0x12 -- 27 02'):
        test.preconditions(
            step_info=info()            
        )
        test.step(
            step_title=name,
            send_key='01',
            expected={
                'response': 'Negative',
                'data'    : '12',
                'data_2'  : '7F'
            }
        )

    def test_008(self, name='subFunctionNotSupported - 0x12 -- 27 04'):
        test.preconditions(
            step_info=info()            
        )
        test.step(
            step_title=name,
            send_key='03',
            expected={
                'response': 'Negative',
                'data'    : '12',
                'data_2'  : '7F'
            }
        )

    def test_009(self, name='subFunctionNotSupported - 0x12 -- 27 06'):
        test.preconditions(
            step_info=info()            
        )
        test.step(
            step_title=name,
            send_key='05',
            expected={
                'response': 'Negative',
                'data'    : '12',
                'data_2'  : '7F'
            }
        )

    def test_010(self, name='subFunctionNotSupported - 0x12 -- 27 FF'):
        test.preconditions(
            step_info=info()            
        )
        test.step(
            step_title=name,
            custom='27 FF',
            expected={
                'response': 'Negative',
                'data': '12'
            }
        )