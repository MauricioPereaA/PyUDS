
            # This is and autogenerated test case using PyUDS Test Builder v0.1 #
#Modified by: Mauricio Perea        Date: 30-Sep-20

from framework.shared_functions import tools        
from Testcases.TestClass import TestCase
from inspect import stack as info
import unittest

test = TestCase()
class PyUDS_TestCase(unittest.TestCase):

    #== Positive Flow Diagnostic Session Control Session and Security Tests ==#
    @classmethod
    def setUpClass(self):
        tools.popup.warning(__name__,
            'Attention !!! MEC needs to be different than ZERO for this test')
        #== Initialize test case ==#
        test.begin(
            test_info=info(),
            writeTestResults=True,
            excel_tab='0x2E'
        )

    @classmethod
    def tearDownClass(self):
        #== End Test Case ==#
        test.end()


    def test_037(self, name='Verify MEC value'):
        test.preconditions(
            step_info=info(),
            mec_zero=True
        )
        test.step(
            step_title=name,
            custom='22 F1 A0',
            expected={
                'response': 'Positive',
                'data': '00'
            }
        )

    def test_038(self, name='Write MEC to a non-zero value'):
        test.preconditions(
            step_info=info()
        )
        test.step(
            step_title=name,
            custom='2E F1 A0 FF',
            expected={
                'response': 'Negative',
                'data'    : '31',        #22-->31
                'data_2'   : '22'  #add
            }
        )

    def test_039(self, name='Verify MEC value'):
        test.preconditions(
            step_info=info()
        )
        test.step(
            step_title=name,
            custom='22 F1 A0',
            expected={
                'response': 'Positive',
                'data'    : '00'
            }
        )

