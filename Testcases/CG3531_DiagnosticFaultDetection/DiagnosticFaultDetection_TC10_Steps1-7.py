
            # This is and autogenerated test case using PyUDS Test Builder v0.1 #
        
from framework.shared_functions import device_under_test, tools, pn_dict
from Testcases.TestClass import TestCase
from inspect import stack as info
import unittest, time, os, random

test = TestCase() 
class PyUDS_TestCase(unittest.TestCase):

    #== CG3531 - Diagnostic Fault Detection ==# 
    @classmethod
    def setUpClass(self):
        #== Initialize test case ==#
        test.begin(
            test_info=info(),
            writeTestResults=False,
            excel_tab='Diagnostic Fault Detection'
        )
        
    @classmethod
    def tearDownClass(self):
        #== End Test Case ==#
        test.end()
        
    def test_004(self, name='%s :: Clear DTC  | '%device_under_test):
        test.preconditions(step_info=info())
               
        test.step(
            step_title=name,
            custom='14 FF FF FF', #clear DTCs
            expected={
                'response': 'Positive'
            }
        )

    def test_004_1(self, name='%s :: Set DTC | '%device_under_test):
        test.preconditions(
            step_info=info()
        )
        
        #Begin operation Cycle: Sleep-Wakeup
        test.canoe.set_envVariable(envVNMFSend=0)
        test.canoe.set_envVariable(envVNMFStop=1)
        
        #Wait until sleep current is reached.
        s_current=test.read_power_supply_current()
        i_current=float(s_current)
        while i_current > 0.02:         
            time.sleep(2)
            i_current=float(test.read_power_supply_current())
            print(i_current)
        time.sleep(3)    
        test.canoe.set_envVariable(envVNMFStop=0)
        test.canoe.set_envVariable(envVNMFSend=1)
        time.sleep(15)
        
        #Generate condition to set DTC 
        #DTC 1 D61100 CAPL implementation stops message from being transmitted
        test.canoe.set_envVariable(VehSpdAvgDrvnAuth_StopSend = 1)
        time.sleep(6)
        
        test.step(
            step_title=name,
            custom='19 02 FF',
            expected={
                'response':     'Positive', 
                'partialData': 'D6 11 00 2F'
            }
        )
        
    def test_005(self, name='%s :: Remove DTC | '%device_under_test):
        test.preconditions(
            step_info=info()
        )
        
        #Remove vehicle conditions that set DTC1
        test.canoe.set_envVariable(VehSpdAvgDrvnAuth_StopSend = 0)     
        time.sleep(6)
        
        #Begin operation Cycle: Sleep-Wakeup
        test.canoe.set_envVariable(envVNMFSend=0)
        test.canoe.set_envVariable(envVNMFStop=1)
        
        #Wait until sleep current is reached.
        s_current=test.read_power_supply_current()
        i_current=float(s_current)
        while i_current > 0.02:         
            time.sleep(2)
            i_current=float(test.read_power_supply_current())
            print(i_current)
        time.sleep(3)    
        test.canoe.set_envVariable(envVNMFStop=0)
        test.canoe.set_envVariable(envVNMFSend=1)
        time.sleep(15)
        
        prompt = tools.popup.ask(title=name, description='Make D6 11 00 28 happen')

        test.step(
            step_title=name,
            custom='19 02 FF',
            expected={
                'response':     'Positive', 
                'partialData': 'D6 11 00 28'
            }
        )
        
    def test_006_1(self, name='%s :: Read DTC status| '%device_under_test):
        test.preconditions(
            step_info=info()
        )

        #Begin operation Cycle: Sleep-Wakeup
        test.canoe.set_envVariable(envVNMFSend=0)
        test.canoe.set_envVariable(envVNMFStop=1)
        
        #Wait until sleep current is reached.
        s_current=test.read_power_supply_current()
        i_current=float(s_current)
        while i_current > 0.02:         
            time.sleep(2)
            i_current=float(test.read_power_supply_current())
            print(i_current)
        time.sleep(3)    
        test.canoe.set_envVariable(envVNMFStop=0)
        test.canoe.set_envVariable(envVNMFSend=1)
        time.sleep(15)
        
        prompt = tools.popup.ask(title=name, description='Make D6 11 00 28 happen')

        test.step(
            step_title=name,
            custom='19 02 FF',
            expected={
                'response':     'Positive', 
                'partialData': 'D6 11 00 28'
            }
        )
        
    def test_006_2(self, name='%s :: Clear DTC | '%device_under_test):
        test.preconditions(
            step_info=info()
        )
        
        test.step(
            step_title=name,
            custom='14 FF FF FF', #clear DTCs
            expected={
                'response': 'Positive'
            }
        )
        
    def test_006_3(self, name='%s :: Read DTC status| '%device_under_test):
        test.preconditions(
            step_info=info()
        )
        
        test.step(
            step_title=name,
            custom='19 02 FF', #clear DTCs
            expected={
                'response': 'Positive',
            }
        ) 
        prompt = tools.popup.ask(title=name, description='Please verify that the DTC D6 11 00 is not in the response -> means status byte is 00')
        test.compare(True, prompt, step='test_006_3')        
        
    def test_006_4(self, name='%s :: Set DTC | '%device_under_test):
        test.preconditions(
            step_info=info()
        )
        
        #Generate condition to set DTC 
        #DTC 1 D61100 CAPL implementation stops message from being transmitted
        test.canoe.set_envVariable(VehSpdAvgDrvnAuth_StopSend = 1)
        time.sleep(6)
        
        test.step(
            step_title=name,
            custom='19 02 FF',
            expected={
                'response':     'Positive', 
                'partialData': 'D6 11 00 2F'
            }
        )
        
    def test_007(self, name='%s :: Clear DTC | '%device_under_test):
        test.preconditions(
            step_info=info()
        )
        
        #Begin operation Cycle: Sleep-Wakeup
        test.canoe.set_envVariable(envVNMFSend=0)
        test.canoe.set_envVariable(envVNMFStop=1)
        
        #Wait until sleep current is reached.
        s_current=test.read_power_supply_current()
        i_current=float(s_current)
        while i_current > 0.02:         
            time.sleep(2)
            i_current=float(test.read_power_supply_current())
            print(i_current)
        time.sleep(3)    
        test.canoe.set_envVariable(envVNMFStop=0)
        test.canoe.set_envVariable(envVNMFSend=1)
        time.sleep(15)
        
        #Remove vehicle conditions that set DTC1
        test.canoe.set_envVariable(VehSpdAvgDrvnAuth_StopSend = 0)     
        time.sleep(6)        
        
        test.step(
            step_title=name,
            custom='14 FF FF FF', #clear DTCs
            expected={
                'response': 'Positive'
            }
        )